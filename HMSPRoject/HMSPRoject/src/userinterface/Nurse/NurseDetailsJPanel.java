/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Nurse;

import Business.Department.DepartmentClass;
import Business.Department.DoctorDepartment;
import Business.Department.EngineeringDepartment;
import Business.Department.EquipmentMaintenanceDepartment;
import Business.Department.NurseDepartment;
import Business.Doctor.DoctorDetails;
import Business.Doctor.DoctorDirectory;
import Business.Ecosystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Nurse.Nurse;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class NurseDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NurseDetailsJPanel
     */
    private JPanel displayJPanel;
    private UserAccount account;
    private DepartmentClass department;
    private Enterprise enterprise;
    private Ecosystem ecosystem;
    public NurseDetailsJPanel(JPanel displayPanel, UserAccount account, DepartmentClass department, Enterprise enterprise,Ecosystem ecosystem) {
        initComponents();
        this.displayJPanel = displayPanel;
        this.department = department;
        this.enterprise = enterprise;
        this.account = account;
        this.ecosystem = ecosystem;
        Employee emp = account.getEmployee();
        fnameTextField.setText(account.getEmployee().getFirstName());
        fnameTextField.setEditable(false);
        empIdjTextField.setText(account.getEmployee().getEmployeeId()+"");
        empIdjTextField.setEditable(false);
        if(emp.getDateOfBirth()!=null)
        {
           dobjTextField.setText(emp.getDateOfBirth());
        }
        if(emp.getLastName()!=null)
        {
            lnamejTextField.setText(emp.getLastName());
        }
        if(emp.getDesignation()!=null)
        {
            designationjComboBox.setSelectedItem(emp.getDesignation());
        }
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fnamejLabel = new javax.swing.JLabel();
        fnameTextField = new javax.swing.JTextField();
        lnamejLabel = new javax.swing.JLabel();
        lnamejTextField = new javax.swing.JTextField();
        dobjLabel = new javax.swing.JLabel();
        dobjTextField = new javax.swing.JTextField();
        empIdjLabel = new javax.swing.JLabel();
        empIdjTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        designationjLabel = new javax.swing.JLabel();
        designationjComboBox = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        nurseworkjTable = new javax.swing.JTable();
        AckjButton = new javax.swing.JButton();
        CompletejButton = new javax.swing.JButton();
        rarjLabel = new javax.swing.JLabel();
        targetteamjLabel = new javax.swing.JLabel();
        targetteamjComboBox = new javax.swing.JComboBox();
        issuedescjLabel = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        issuejTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        salaryTextField = new javax.swing.JTextField();

        jLabel1.setText("Grey Sloan Medical Centre");

        jLabel2.setText("Welcome<Ria Rajput>");

        jLabel3.setText("Personal Details:");

        fnamejLabel.setText("First Name:");

        fnameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnameTextFieldActionPerformed(evt);
            }
        });

        lnamejLabel.setText("Last Name:");

        dobjLabel.setText("Date of Birth:");

        dobjTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobjTextFieldActionPerformed(evt);
            }
        });

        empIdjLabel.setText("Employee Id:");

        jLabel4.setText("Work Details:");

        designationjLabel.setText("Designation:");

        designationjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Trainee Nurse", "Nurse", "Senior Nurse", "Head Nurse" }));
        designationjComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                designationjComboBoxItemStateChanged(evt);
            }
        });

        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Work Queue:");

        nurseworkjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient id", "Patient Name", "Room num", "Assigned Task", "Acknowledged?"
            }
        ));
        nurseworkjTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(nurseworkjTable);
        nurseworkjTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (nurseworkjTable.getColumnModel().getColumnCount() > 0) {
            nurseworkjTable.getColumnModel().getColumn(0).setResizable(false);
            nurseworkjTable.getColumnModel().getColumn(1).setResizable(false);
            nurseworkjTable.getColumnModel().getColumn(2).setResizable(false);
            nurseworkjTable.getColumnModel().getColumn(4).setResizable(false);
        }

        AckjButton.setText("Acknowledge");
        AckjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AckjButtonActionPerformed(evt);
            }
        });

        CompletejButton.setText("Complete");
        CompletejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompletejButtonActionPerformed(evt);
            }
        });

        rarjLabel.setText("Raise A Request:");

        targetteamjLabel.setText("Target Team:");

        targetteamjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Engineering Team", "Tech Support Team", "Equipment Maintainance Team" }));
        targetteamjComboBox.setToolTipText("");

        issuedescjLabel.setText("Issue description:");

        jButton3.setText("Submit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel6.setText("Salary");

        salaryTextField.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(AckjButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(CompletejButton))
                                    .addComponent(rarjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(108, 300, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lnamejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(fnamejLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lnamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(fnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(designationjLabel)
                                        .addGap(11, 11, 11)
                                        .addComponent(designationjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dobjLabel)
                                        .addGap(30, 30, 30)
                                        .addComponent(dobjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(empIdjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(30, 30, 30)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(empIdjTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                            .addComponent(salaryTextField))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(targetteamjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(targetteamjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(issuedescjLabel)
                                .addGap(18, 18, 18)
                                .addComponent(issuejTextField1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addGap(366, 366, 366))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fnamejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dobjLabel)
                    .addComponent(dobjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lnamejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lnamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empIdjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empIdjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(designationjLabel)
                            .addComponent(designationjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(salaryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AckjButton)
                    .addComponent(CompletejButton))
                .addGap(21, 21, 21)
                .addComponent(rarjLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(targetteamjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(issuedescjLabel)
                        .addComponent(issuejTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(targetteamjLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(16, 16, 16)
                .addComponent(jButton3))
        );
    }// </editor-fold>//GEN-END:initComponents
private void populateSalary() {
      if(designationjComboBox.getSelectedItem()=="Trainee Nurse")
      {
          salaryTextField.setText("2000.00");
      }
      else if(designationjComboBox.getSelectedItem()=="Nurse")
      {
          salaryTextField.setText("2250.00");
      }
      else if(designationjComboBox.getSelectedItem()=="Senior Nurse")
      {
          salaryTextField.setText("2500.00");
      }
      else
      {
          salaryTextField.setText("4000.00");
      }
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    public void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel) nurseworkjTable.getModel();
        
        model.setRowCount(0);
        
        for(DepartmentClass dept: ecosystem.getNetworkList().get(0).getDepartmentDirectory().getDepartmentList())
        {
            if(dept instanceof NurseDepartment)
            {
                for(Nurse nurse: ((NurseDepartment) dept).getNurseDirectory().getNurseList())
                {
                    if(nurse.getEmployeeId()==account.getEmployee().getEmployeeId())
                    {
                        for (Patient patient : nurse.getPatientDirectory().getPatientList()){
                                if(patient!=null)
                                {
                                    Object[] row = new Object[5];
                                    row[0] = patient.getPatientId();
                                    row[1] = patient.getPatientName();
                                    row[2] = patient.getPatientRoomNo();
                                    row[3] = patient.getNurseTask();
                                    row[4] = patient.getNurseAcknowledged();
                                    model.addRow(row);
                                }
                            }
                    }
                }
            }
        }
    }
    private void dobjTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dobjTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dobjTextFieldActionPerformed

    private void fnameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnameTextFieldActionPerformed

    private void AckjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AckjButtonActionPerformed
        int row = nurseworkjTable.getSelectedRow();
        int column = nurseworkjTable.getSelectedColumn();
        int patientId = 0;
        System.out.println("row: "+row+" column: "+column+" value: "+nurseworkjTable.getValueAt(row, column));
        try{
            patientId = (Integer)nurseworkjTable.getValueAt(row, column);
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(displayJPanel,"Select valid Patient ID.");
            return;
        }
        boolean isDisplayed = false;
        for(DepartmentClass dept: ecosystem.getNetworkList().get(0).getDepartmentDirectory().getDepartmentList())
        {
            if(dept instanceof NurseDepartment)
            {
                    for(Nurse nurse: ((NurseDepartment) dept).getNurseDirectory().getNurseList())
                    {
                        if(nurse.getEmployeeId()==account.getEmployee().getEmployeeId())
                        {
                            for (Patient patient : nurse.getPatientDirectory().getPatientList()){
                                if(patient!=null && patient.getPatientId()==patientId)
                                {
                                    patient.setNurseAcknowledged("Y");
                                    isDisplayed = true;
                                    JOptionPane.showMessageDialog(displayJPanel,"Acknowledged Successfully!");
                                    break;
                                }
                            }
                        }
                    }
            }
        }
        if(!isDisplayed)
        {
            JOptionPane.showMessageDialog(displayJPanel,"No records found. Select valid Patient ID.");
        }
        populateTable();
    }//GEN-LAST:event_AckjButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        String teamType = (String)targetteamjComboBox.getSelectedItem();
        String issueDesc = issuejTextField1.getText();
        if("Equipment Maintainance Team".equalsIgnoreCase(teamType))
        {
            try
            {
                for(DepartmentClass dept: ecosystem.getNetworkList().get(0).getDepartmentDirectory().getDepartmentList())
                {
                    if(dept instanceof EquipmentMaintenanceDepartment)
                    {
                        ((EquipmentMaintenanceDepartment) dept).getEquipmentMaintananceDirectory().getEquipmentMaintananceList().get(0).getWorkQueueDirectory().createWorkQueue(issueDesc);

                    }
                }
                JOptionPane.showMessageDialog(displayJPanel,"Work Queue added to Equipment Maintenance Team.");
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(displayJPanel,"Equipment Maintenance team not available");
            }
            
        }
        else if("Engineering Team".equalsIgnoreCase(teamType))
        {
            try
            {
                for(DepartmentClass dept: ecosystem.getNetworkList().get(0).getDepartmentDirectory().getDepartmentList())
                {
                    if(dept instanceof EngineeringDepartment)
                    {
                        ((EngineeringDepartment) dept).getEngineeringTeamDirectory().getEnggTeamList().get(0).getWorkQueueDirectory().createWorkQueue(issueDesc);
                    }
                }
                JOptionPane.showMessageDialog(displayJPanel,"Work Queue added to Egineering Team.");
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(displayJPanel,"Engineering team not available");
            }
            
        }
        else if("Tech Support Team".equalsIgnoreCase(teamType))
        {
            try
            {
                for(DepartmentClass dept: ecosystem.getNetworkList().get(0).getDepartmentDirectory().getDepartmentList())
                {
                    if(dept instanceof EngineeringDepartment)
                    {
                        ((EngineeringDepartment) dept).getEngineeringTeamDirectory().getEnggTeamList().get(0).getWorkQueueDirectory().createWorkQueue(issueDesc);
                    }
                }
                JOptionPane.showMessageDialog(displayJPanel,"Work Queue added to Egineering Team.");
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(displayJPanel,"Engineering team not available");
            }
            
        }
        else
        {
            JOptionPane.showMessageDialog(displayJPanel,"Selected team not available");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String firstName = fnameTextField.getText();
        String lastName = lnamejTextField.getText();
        int employeeId = Integer.parseInt(empIdjTextField.getText());
        String designation = designationjComboBox.getSelectedItem().toString();
        String dob = dobjTextField.getText();
        
        System.out.println("employeeId: "+employeeId);
        boolean isUpdated=false;
        for(DepartmentClass dep: ecosystem.getNetworkList().get(0).getDepartmentDirectory().getDepartmentList())
        {
            for(UserAccount user:dep.getUserDir().getUserAccountsList())
            {
                Employee emp = user.getEmployee();
                System.out.println("emp.getEmployeeId(): "+emp.getEmployeeId());
                if(emp.getEmployeeId()==employeeId)
                {
                    System.out.println("Updating employee details");
                    emp.setDateOfBirth(dob);
                    emp.setLastName(lastName);
                    emp.setDesignation(designation);
                    isUpdated=true;
                    break;
                }
            }
            if(isUpdated)
            {
                break;
            }
        }
        JOptionPane.showMessageDialog(displayJPanel,"Updated Successfully!");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void CompletejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompletejButtonActionPerformed
        int row = nurseworkjTable.getSelectedRow();
        int column = nurseworkjTable.getSelectedColumn();
        int patientId = 0;
        System.out.println("row: "+row+" column: "+column+" value: "+nurseworkjTable.getValueAt(row, column));
        try{
            patientId = (Integer)nurseworkjTable.getValueAt(row, column);
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(displayJPanel,"Select valid Patient ID.");
            return;
        }
        boolean isDisplayed = false;
        for(DepartmentClass dept: ecosystem.getNetworkList().get(0).getDepartmentDirectory().getDepartmentList())
        {
            if(dept instanceof NurseDepartment)
            {
                    for(Nurse nurse: ((NurseDepartment) dept).getNurseDirectory().getNurseList())
                    {
                        if(nurse.getEmployeeId()==account.getEmployee().getEmployeeId())
                        {
                            for (Patient patient : nurse.getPatientDirectory().getPatientList()){
                                if(patient!=null && patient.getPatientId()==patientId)
                                {
                                    nurse.getPatientDirectory().getPatientList().remove(patient);
                                    isDisplayed = true;
                                    JOptionPane.showMessageDialog(displayJPanel,"Completed Successfully!");
                                    break;
                                }
                            }
                        }
                    }
            }
        }
        if(!isDisplayed)
        {
            JOptionPane.showMessageDialog(displayJPanel,"No records found. Select valid Patient ID.");
        }
        populateTable();
    }//GEN-LAST:event_CompletejButtonActionPerformed

    private void designationjComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_designationjComboBoxItemStateChanged
        // TODO add your handling code here:
        populateSalary();
    }//GEN-LAST:event_designationjComboBoxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AckjButton;
    private javax.swing.JButton CompletejButton;
    private javax.swing.JComboBox designationjComboBox;
    private javax.swing.JLabel designationjLabel;
    private javax.swing.JLabel dobjLabel;
    private javax.swing.JTextField dobjTextField;
    private javax.swing.JLabel empIdjLabel;
    private javax.swing.JTextField empIdjTextField;
    private javax.swing.JTextField fnameTextField;
    private javax.swing.JLabel fnamejLabel;
    private javax.swing.JLabel issuedescjLabel;
    private javax.swing.JTextField issuejTextField1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lnamejLabel;
    private javax.swing.JTextField lnamejTextField;
    private javax.swing.JTable nurseworkjTable;
    private javax.swing.JLabel rarjLabel;
    private javax.swing.JTextField salaryTextField;
    private javax.swing.JComboBox targetteamjComboBox;
    private javax.swing.JLabel targetteamjLabel;
    // End of variables declaration//GEN-END:variables
}
